{#
   This template implements the primary hitchhiker layout implementation,
   which is alike 2014 onwards, featuring appbar and its modified structure.

   In other words, this implements the main YouTube page template that most
   other pages extend.
#}
{% import 'core/macros.twig' as core %}
{% import "common/alert.twig" as alert %}
<!DOCTYPE html>
<html lang="{{ yt.hl }}" data-cast-api-enabled="true">
   <head>
      {#
         The Rehike debugger uses XHook as a component for debugging network
         requests. Since the XHook script needs to be loaded before any other
         scripts in order to properly hijack XHR, this is injected if the
         debugger is enabled.
      #}
      {% if rehikeDebugger and not rehikeDebugger.condensed and not yt.spf %}
         <script>{% include "rehike/debugger/js/xhook.js" %}</script>
      {% endif %}
	  <script>
	  function _init() {};
	  function _onInit() {};
	  function _onRebugInit() {};
	  function onTabSwitch() {};
	  function onHistorySwitch() {};
	  window.rehike = {
	  "inherits" : null,
  "class": {},
  "debug": {},
  "eventDelegate": {
    "_handlers": [],
    "_activeEvents": [
      "click"
    ]
  },
  "pubsub": {
    "_subscriptions": {
      "rebug-init-finish": [
        _init(),
        _onInit(),
        _onRebugInit(),
        _onRebugInit()
      ],
      "rebug-tab-switch": [
        onTabSwitch()
      ],
      "rebug-history-switch": [
        onHistorySwitch()
      ]
    }
  },
  "script": {
    "pageSpecificCallbackInstalled_": false,
    "pageSpecificCallbackRegistry_": []
  },
  "util": {
    "scrollLock": {
      "_enabled": false,
      "_previousScroll": 0,
      "_elements": [],
      "_bodyInfo": null
    },
    "events": {
		"add": function(a,b,c){a.addEventListener?a.addEventListener(b,c):a.attachEvent&&a.attachEvent("on"+b,c)},
		"remove": function(a,b,c){a.removeEventListener?a.removeEventListener(b,c):a.detachEvent&&a.detachEvent("on"+b,c)}
	}
  }
};
		rehike.inherits = function(a,b){var c=function(){};c.prototype=b.prototype;a.prototype=new c;a.prototype.constructor=a;a["super"]=function(f,g){for(var h=[],k=2;k<arguments.length;k++)h[k-2]=arguments[k];return b.prototype[g].apply(f,h)}};
	  </script>
      {% include "core/ublock_error.twig" %}
      {% include "core/roboto.twig" %}
	  
      <script>{{ include('/core/www-ytcsi.js') }}</script>
      <script >var ytcfg = {d: function() {return (window.yt && yt.config_) || ytcfg.data_ || (ytcfg.data_ = {});},get: function(k, o) {return (k in ytcfg.d()) ? ytcfg.d()[k] : o;},set: function() {var a = arguments;if (a.length > 1) {ytcfg.d()[a[0]] = a[1];} else {for (var k in a[0]) {ytcfg.d()[k] = a[0][k];}}}};</script>  
      <script>ytcfg.set("ROOT_VE_TYPE", 3854);ytcfg.set("EVENT_ID", "caLrWqLbKZD2_AOA-6vIAg");</script>
      <script>{{ include('/core/www-pageframesizing.js.twig') }}</script>
      {{ core.js('scheduler/scheduler') }}
      {%- block head_css  -%}{%- endblock -%}
	  <link rel="stylesheet" href="{{ yt.playerConfig.embedCssUrl }}" name="player/www-embed-player">
      <link rel="stylesheet" href="{{ yt.playerConfig.baseCssUrl }}" name="player/www-player">
      <title>{{ yt.title ?? "YouTube" }}</title>
   </head>
   {#
      The body's class contains general metadata about the YouTube session,
      including, such as experiments or important CSS configuration. It may need
      to be changed by a child template at some point, so it's made a block
      here.
   #}
   <body dir="ltr" id="body" class="{%- block body_class -%}  
      {% include "core/body_class.twig" %}
      {% endblock %}" data-spf-name="other">
         {% include 'player/core.twig' %}
         {% block content %}{% endblock %}
      {% if yt.rehikeSecurityNotice %}
         {% from "rehike/security/security_lightbox.twig" import render as security_lightbox %}
         {{ security_lightbox(yt.rehikeSecurityNotice) }}
      {% endif %}
      {#
         YouTube's foot contains templates and scripts.
      #}
      {% include 'core/spf_module.twig' %}
      {%- if yt.useModularCore -%}
         {% include 'core/modular_js_v2.twig' %}
      {% else %}
         {{ core.js('www-core/www-core') }}
      {% endif %}
      <script>if (window.ytcsi) {window.ytcsi.tick("je", null, '');}</script>  
      {%- block foot_scripts -%}{% endblock %}
      {% include 'core/yt_global_js_config.twig' %}
      {#
         Inject Rebug (if it is enabled)
      #}
      
   </body>
</html>